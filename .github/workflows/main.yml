name: Flutter CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.19.0"
          channel: "stable"
          cache: true

      - name: Install dependencies
        run: flutter pub get

      - name: Analyze project source
        run: flutter analyze

      - name: Run tests
        run: flutter test

      - name: Build APK
        run: flutter build apk --release

      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: release-apk
          path: build/app/outputs/flutter-apk/app-release.apk

      - name: Build Web
        run: flutter build web --release

      - name: Upload Web Build
        uses: actions/upload-artifact@v3
        with:
          name: web-build
          path: build/web

  deploy-web:
    needs: build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Download Web Build
        uses: actions/download-artifact@v3
        with:
          name: web-build
          path: web-build

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./web-build


  deploy-android:
    needs: build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Download APK
        uses: actions/download-artifact@v3
        with:
          name: release-apk
          path: apk

      # Optional: Deploy to Google Play Store
      # You would need to set up proper credentials and use a plugin like r0adkll/upload-google-play
      - name: Upload to Google Play
        run: echo "To deploy to Google Play, add the r0adkll/upload-google-play action with proper credentials"
        # Uncomment and configure when ready to deploy to Play Store
        # uses: r0adkll/upload-google-play@v1
        # with:
        #   serviceAccountJsonPlainText: ${{ secrets.PLAY_STORE_SERVICE_ACCOUNT_JSON }}
        #   packageName: com.yourcompany.yourapp
        #   releaseFiles: apk/app-release.apk
        #   track: production
        #   status: completed
#